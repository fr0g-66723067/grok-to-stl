// Basic Parametric Object Template
// Generated by Grok-to-STL

/* [Basic Parameters] */
// Object height in millimeters
height = 100; // [10:200]
// Object width in millimeters
width = 80; // [10:200]
// Object depth in millimeters
depth = 120; // [10:200]

/* [Advanced Parameters] */
// Corner radius in millimeters
corner_radius = 5; // [0:20]
// Wall thickness in millimeters
wall_thickness = 2; // [1:10]
// Quality of curved surfaces (higher = better quality but slower)
$fn = 50; // [20:100]

/* [Hidden] */
epsilon = 0.01;

module roundedCube(size, radius) {
    x = size[0];
    y = size[1];
    z = size[2];
    
    hull() {
        translate([radius, radius, radius])
        sphere(r = radius);
        
        translate([x - radius, radius, radius])
        sphere(r = radius);
        
        translate([radius, y - radius, radius])
        sphere(r = radius);
        
        translate([x - radius, y - radius, radius])
        sphere(r = radius);
        
        translate([radius, radius, z - radius])
        sphere(r = radius);
        
        translate([x - radius, radius, z - radius])
        sphere(r = radius);
        
        translate([radius, y - radius, z - radius])
        sphere(r = radius);
        
        translate([x - radius, y - radius, z - radius])
        sphere(r = radius);
    }
}

// Main object
difference() {
    // Outer shell
    roundedCube([width, depth, height], corner_radius);
    
    // Inner cavity
    translate([wall_thickness, wall_thickness, wall_thickness])
    roundedCube([
        width - 2*wall_thickness,
        depth - 2*wall_thickness,
        height - wall_thickness + epsilon
    ], corner_radius - wall_thickness);
} 